name: GitHub Release

on:
  pull_request:
    types: [opened, closed, reopened, synchronize]
    paths-ignore:
      - ".github/**"
      - "README.md"

env:
  GH_RELEASE_CREATOR_VERSION: "v1.0.0"

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Fetch main branch
        run: git fetch origin main

      - name: Get changed modules
        run: |
          changed_modules="$(dirname $(git diff --name-only origin/main...HEAD) | sort -u | grep -Ev "(\^.|\.github)" | tr '\n' ' ')"
          echo "changed_modules=$changed_modules" >> $GITHUB_ENV

      - name: Determine commit type
        run: |
          declare -A commit_types
          for module in $changed_modules; do
              commit_message=$(git log -1 --pretty=%B -- "$module")
              if [[ "$commit_message" == *"feat!"* ]]; then
                  commit_types[$module]="major"
              elif [[ "$commit_message" == *"feat"* ]]; then
                  commit_types[$module]="minor"
              else
                  commit_types[$module]="patch"
              fi
          done
        
          for module in "${!commit_types[@]}"; do
              echo "$module=${commit_types[$module]}" >> $GITHUB_ENV
          done

      - name: Output changed modules and commit types
        run: |
          for module in $changed_modules; do
            commit_type=$(printenv "$module")
            echo "Changed module: $module. Commit type: $commit_type"
          done

      - name: Create release
        if: github.event.pull_request.merged == true 
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -sSL -o gh-release-creator.tar.gz https://github.com/benhur-araujo/bash-scripts/archive/refs/tags/gh-release-creator-$GH_RELEASE_CREATOR_VERSION.tar.gz
          tar -zxf gh-release-creator.tar.gz && cd bash-scripts-gh-release-creator-$GH_RELEASE_CREATOR_VERSION/gh-release-creator
          for module in $changed_modules; do
            commit_type=$(printenv "$module")
            ./gh-release-creator.sh "$module" "$commit_type"
          done
